<project xmlns="http://maven.apache.org/POM/4.0.0"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- model version - always 4.0.0 for Maven 2.x POMs -->
  <modelVersion>4.0.0</modelVersion>
  

    <!-- project coordinates - values which uniquely identify this project -->

  <groupId>edu.ucsb.cs56.pconrad</groupId>
  <artifactId>sparkjava-lombok-jackson-example</artifactId>
  <version>1.0</version>
  <url>https://ucsb-cs56-pconrad.github.io/sparkjava-lombok-jackson-example</url>
  
  <!-- configure what mvn package produces -->
  
  <packaging>jar</packaging>
  <name>sparkjava-lombok-jackson-example</name>
  
  <!-- what version of Java should we use and what encoding for files? -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <userDefinedMainClass>edu.ucsb.cs56.pconrad.restdemo.BlogService</userDefinedMainClass>
  </properties>

  <!-- what other software does our project depend on (third-party JARs, etc.) -->
  <dependencies>

 <!-- MongoDB NoSQL Database -->
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongo-java-driver</artifactId>
      <version>3.8.1</version>
    </dependency>

    <!-- log4j -->
    
    <dependency>
       <groupId>org.slf4j</groupId>
       <artifactId>slf4j-api</artifactId>
       <version>1.7.5</version>
   </dependency>
   <dependency>
       <groupId>org.slf4j</groupId>
       <artifactId>slf4j-log4j12</artifactId>
       <version>1.7.5</version>
  </dependency>

    
    <!-- JUnit unit testing (https://junit.org/) -->    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>

    <!-- Spark Java Web framework (http://sparkjava.com/) -->
    <dependency>
      <groupId>com.sparkjava</groupId>
      <artifactId>spark-core</artifactId>
      <version>2.5</version>
    </dependency>

    <!-- Jackson for json parsing -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>2.9.6</version>
    </dependency>
    
    <dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>2.9.6</version>
    </dependency>

    <!-- Project Lombok is a java library that automatically plugs into your editor and build tools, spicing up your java.
	 Never write another getter or equals method again. Early access to future java features such as val, and much more.
	 See: https://projectlombok.org/
    -->
    
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.16.2</version>
      <scope>provided</scope>
    </dependency>

    <!-- SQL to Java library
	 https://www.sql2o.org/ -->
    
    <dependency>
      <groupId>org.sql2o</groupId>
      <artifactId>sql2o</artifactId>
      <version>1.5.4</version>
    </dependency>
    <!-- Postgres is an SQL database -->
    
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>9.4-1201-jdbc41</version>
    </dependency>
    <!-- Google core libraries for Java -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>18.0</version>
    </dependency>
    <!-- http://easymock.org/ Mock Objects for Testing -->
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>3.3.1</version>
      <scope>test</scope>
    </dependency>
    <!-- gson: From Google, a Java serialization/deserialization
         library to convert Java Objects into JSON and back -->
    <dependency>
    <groupId>com.google.code.gson</groupId>
    <artifactId>gson</artifactId>
    <version>2.3.1</version>
    <scope>test</scope>
  </dependency>
    
  </dependencies>

  <!-- For use with github pages, to publish the site to the /docs subdirectory -->
  <distributionManagement>
    <site>
      <id>website</id>
      <url>file://${project.basedir}/docs/</url>
    </site>
  </distributionManagement>

  <reporting>

    <plugins>

      
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-compiler-plugin</artifactId>
	<version>3.8.0</version>
	<configuration>
	  <fork>true</fork>
	  <source>1.8</source>
	  <target>1.8</target>
	    <compilerArgs>
	      <arg>-Xlint:unchecked</arg>
	    </compilerArgs>
	    <showWarnings>true</showWarnings>
	    <showDeprecation>true</showDeprecation>
	    <verbose>true</verbose>
	</configuration>
      </plugin>
      
      
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-project-info-reports-plugin</artifactId>
	<version>2.9</version>
	<!-- SEE: https://stackoverflow.com/questions/28098566/maven-site-warning-the-repository-url-https-maven-repository-dev-java-net-no -->
	<configuration>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
      </plugin>
  
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.0.1</version>
      </plugin>
    </plugins>
    
  </reporting>

  <build>
    <plugins>

      <!-- Make executable jar WITH dependencies -->
      <!-- See: https://www.baeldung.com/executable-jar-with-maven -->
      
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-assembly-plugin</artifactId>
	<executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <archive>
                <manifest>
		    <mainClass>${userDefinedMainClass}</mainClass>
                </manifest>
              </archive>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
            </configuration>
          </execution>
	</executions>
      </plugin>

      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>exec-maven-plugin</artifactId>
	<version>1.6.0</version>
	<executions>
	  <execution>
	    <id>my-execution</id>
	    <goals>
	      <goal>java</goal>
	    </goals>
	  </execution>
	</executions>
	<configuration>
	  <mainClass>${userDefinedMainClass}</mainClass> 
	</configuration>
      </plugin>

      <plugin>
	<groupId>com.heroku.sdk</groupId>
	<artifactId>heroku-maven-plugin</artifactId>
	<version>2.0.3</version>
	<configuration>
          <jdkVersion>1.8</jdkVersion>
          <!-- Use your own application name -->
	  <!-- at Heroku CLI, use heroku apps to list, or use Heroku Dashboard -->
          <appName>ucsb-cs56-pconrad-08-28-18</appName> 
          <processTypes>
            <!-- Tell Heroku how to launch your application -->
            <!-- You might have to remove the ./ in front   -->
            <web>java $JAVA_OPTS -jar target/${project.name}-${project.version}-jar-with-dependencies.jar</web>

          </processTypes>
	</configuration>
      </plugin>



      
    </plugins>
  </build>
  
</project>


